@using BrandonSimpleBlog.Data
@model BlogResult

<div class="table-responsive">
        <table class="table table-hover">
            <thead>
                <tr>
                    <th>Title</th>
                    <th>Date</th>
                    <th>Author</th>
                    <th>Published</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var post in Model.Posts)
                {
                <tr>
                    <td> @post.Title </td>
                    <td> @post.DateString </td>
                    <td> @post.AuthorName </td>
                    <td>
                        <div class="custom-control custom-checkbox mb-3">
                            <input type="checkbox" class="custom-control-input" id="customControlValidation1" required>
                            <label class="custom-control-label" for="customControlValidation1"></label>
                            <div class="invalid-feedback"></div>
                        </div>
                    </td>
                </tr>
                }               
            </tbody>
        </table>
    </div>

@if (Model.TotalPages > 1)
{
    <!-- Pagination -->
    <ul class="pagination justify-content-center mb-4">
        @{
            var startPoint = 1;
            var maxShown = 5;
            var nextPage = Model.CurrentPage + 1;
            var prevPage = Model.CurrentPage - 1;
            var urlpath = @Context.Request.Path;
            var urlquerystring = "";
            if (!String.IsNullOrEmpty(@Context.Request.Query["term"].ToString()))
            {
                urlquerystring = "&term=" + @Context.Request.Query["term"].ToString();
            }
            if (Model.CurrentPage > 3 && Model.TotalPages > maxShown)
            {
                startPoint = Model.CurrentPage - 2;
            }
            if (Model.TotalPages - Model.CurrentPage < 2 && Model.TotalPages > maxShown)
            {
                startPoint = Model.TotalPages - maxShown + 1;
            }
        }
        <li class="page-item @(@Model.CurrentPage == 1? "disabled" : "")">
            <a class="page-link" href="@urlpath?resultpage=@prevPage@urlquerystring">Previous</a>
        </li>
        @if (Model.CurrentPage - 2 > 1)
        {
            <li class="page-item">
                <a class="page-link" href="@urlpath?resultpage=1 @urlquerystring">1</a>
            </li>
            <li class="page-item">
                <span class="page-link">...</span>
            </li>
        }

        @for (var i = startPoint; i <= Model.TotalPages && i < startPoint + maxShown; i++)
        {


            @if (i == Model.CurrentPage)
            {
                <li class="page-item active">
                    <span class="page-link">
                        @i
                        <span class="sr-only">(current)</span>
                    </span>
                </li>
            }
            else
            {
                <li class="page-item"><a class="page-link" href="@urlpath?resultpage=@i@urlquerystring">@i</a></li>
            }
        }
        @if (Model.CurrentPage + 2 < Model.TotalPages)
        {
            <li class="page-item">
                <span class="page-link">...</span>
            </li>
            <li class="page-item">
                <a class="page-link" href="@urlpath?resultpage=@Model.TotalPages@urlquerystring">@Model.TotalPages</a>
            </li>
        }
        <li class="page-item @(@Model.CurrentPage == Model.TotalPages? "disabled" : "")">
            <a class="page-link" href="@urlpath?resultpage=@nextPage@urlquerystring">Next</a>
        </li>

    </ul>
}